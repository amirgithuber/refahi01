services:
  db:
    image: postgres:14
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    # در محیط پروداکشن، پورت دیتابیس را به بیرون باز نکنید
    restart: always

  backend:
    build: ./backend
    entrypoint: ["sh", "/app/entrypoint.sh"]
    # از Gunicorn به جای runserver استفاده می‌کنیم
    command: ["gunicorn", "--bind", "0.0.0.0:8000", "refahi02.wsgi:application"]
    volumes:
      # فقط فایل‌های استاتیک و مدیا را به اشتراک می‌گذاریم، نه کد
      - staticfiles:/app/staticfiles
      - mediafiles:/app/mediafiles
    environment:
      - DEBUG=0
      - DATABASE_NAME=${POSTGRES_DB}
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOST=${ALLOWED_HOSTS}
    depends_on:
      db:
        condition: service_healthy
    restart: always

  frontend:
    build: ./frontend
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    restart: always

  # Nginx به عنوان پروکسی معکوس برای مدیریت درخواست‌ها
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - staticfiles:/var/www/static
      - mediafiles:/var/www/media
    depends_on:
      - backend
      - frontend
    restart: always

volumes:
  postgres_data:
  staticfiles:
  mediafiles: